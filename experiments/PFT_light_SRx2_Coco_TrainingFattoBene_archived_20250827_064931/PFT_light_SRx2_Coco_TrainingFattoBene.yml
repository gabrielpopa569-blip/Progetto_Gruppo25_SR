# GENERATE TIME: Tue Aug 26 19:38:36 2025
# CMD:
# basicsr/train.py -opt options/train/PFT_light_SRx2_Coco_TrainingFattoBene.yml

# GENERATE TIME: Mon Aug  4 21:51:31 2025
# CMD:
# basicsr/train.py -opt options/train/PFT_light_SRx2_Set5_primotraining.yml


# general settings
name: PFT_light_SRx2_Coco_TrainingFattoBene
model_type: PFTModel
scale: 2
num_gpu: 1
manual_seed: 0

# find_unused_parameters needs to be true, otherwise it will affect performance
find_unused_parameters: true

# dataset and data loader settings
datasets:
  train:
    name: Coco
    type: PairedImageDataset
    dataroot_gt: datasets/coco/HR
    dataroot_lq: datasets/coco/LR
    filename_tmpl: '{}x2'
    io_backend:
      type: disk

    gt_size: 128
    use_hflip: true
    use_rot: true

    # data loader
    num_worker_per_gpu: 8
    batch_size_per_gpu: 8
    dataset_enlarge_ratio: 1
    prefetch_mode: cuda
    pin_memory: True
    persistent_workers: True

  val_1:
    name: Set5
    type: PairedImageDataset
    dataroot_gt: datasets/TestDataSR/HR/Set5/x2
    dataroot_lq: datasets/TestDataSR/LR/LRBI/Set5/x2
    io_backend:
      type: disk

  val_2:
    name: Set14
    type: PairedImageDataset
    dataroot_gt: datasets/TestDataSR/HR/Set14/x2
    dataroot_lq: datasets/TestDataSR/LR/LRBI/Set14/x2
    io_backend:
      type: disk

  val_3:
    name: BSD100
    type: PairedImageDataset
    dataroot_gt: datasets/TestDataSR/HR/B100/x2
    dataroot_lq: datasets/TestDataSR/LR/LRBI/B100/x2
    io_backend:
      type: disk

  # val_4:
  #   name: Urban100
  #   type: PairedImageDataset
  #   dataroot_gt: datasets/TestDataSR/HR/Urban100/x2
  #   dataroot_lq: datasets/TestDataSR/LR/LRBI/Urban100/x2
  #   io_backend:
  #     type: disk

  # val_5:
  #   name: Manga109
  #   type: PairedImageDataset
  #   dataroot_gt: datasets/TestDataSR/HR/Manga109/x2
  #   dataroot_lq: datasets/TestDataSR/LR/LRBI/Manga109/x2
  #   io_backend:
  #     type: disk

# network structures
network_g:
  type: PFT
  upscale: 2
  in_chans: 3
  img_size: 64
  embed_dim: 52
  depths: [2, 4, 6, 6, 6]
  num_heads: 4
  num_topk: [1024, 1024,
              256, 256, 256, 256,
              128, 128, 128, 128, 128, 128,
              64, 64, 64, 64, 64, 64,
              32, 32, 32, 32, 32, 32]
  window_size: 32
  convffn_kernel_size: 7
  img_range: 1.
  mlp_ratio: 1
  upsampler: 'pixelshuffledirect'
  resi_connection: '1conv'
  use_checkpoint: false

# path
path:
  pretrain_network_g: experiments/modelli_trainati/Coco_pretraining_100000.pth
  strict_load_g: true
  resume_state: ~


# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: AdamW
    lr: !!float 1e-4   # nuovo LR (più stabile, visto che il modello ha già fatto 50k step)
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [100000, 200000, 300000]
    gamma: 0.5


  total_iter: 400000     # totale training previsto
  warmup_iter: 0         # già hai fatto warmup, non serve più

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

# validation settings
val:
  val_freq: !!float 1e4
  save_img: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 2
      test_y_channel: yes

    ssim: # metric name, can be arbitrary
      type: calculate_ssim
      crop_border: 2
      test_y_channel: yes

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 1e4
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
  port: 29500